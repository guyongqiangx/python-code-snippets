#!/usr/bin/env python3

import os
import zipfile
import argparse


def show_zipfile(filename):
    zf = zipfile.ZipFile(filename, 'r')
    print('File offset and size in {}:\n'.format(filename))
    print('{:>25s}  {:>15s}  {:>15s}  {:>15s}'.format("name", "offset", "size", "compress_size"))
    print('{:>25s}  {:>15s}  {:>15s}  {:>15s}'.format('-' * 25, '-' * 15, '-' * 15, '-' * 15))
    for x in zf.namelist():
        info = zf.getinfo(x)
        offset = info.header_offset + len(info.FileHeader())
        size = info.file_size
        compress_size = info.compress_size
        print('{:>25s}  {:>15d}  {:>15d}  {:>15d}'.format(os.path.basename(x), offset, size, compress_size))
    zf.close()


if __name__ == "__main__":
    parser = argparse.ArgumentParser(prog='zipshow',
                                 description='Show file offset and size in zip file',
                                 usage='%(prog)s -f FILE',
                                 epilog='For Android update engine, "offset" and "size" of payload.bin are required '
                                        'when passing a zip file like update.zip to process.\n'
                                        'This tool("%(prog)s") is used to show the "offset" and "size" of all files in '
                                        ' a given zip file.')
    parser.add_argument('-f', '--file', required=True, help="input .zip file")
    args = parser.parse_args()

    show_zipfile(args.file)
